//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use chrono::NaiveDateTime;
use sea_orm::entity::prelude::*;
use sea_orm::entity::prelude::StringLen::N;
use serde::Serialize;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize)]
#[sea_orm(table_name = "event")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub actor: String,
    pub event_date: NaiveDateTime,
    pub event_type: EventType,
    pub image: Option<String>,
    pub amount: Option<i64>,
    pub target: Option<String>,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize)]
#[sea_orm(rs_type = "String", db_type = "String(N(255))")]
pub enum EventType {
    #[sea_orm(string_value = "UPLOAD")]
    UPLOAD,
    #[sea_orm(string_value = "TRANSFER")]
    TRANSFER,
    #[sea_orm(string_value = "BUY")]
    BUY,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
